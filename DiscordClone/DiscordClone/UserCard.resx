<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picUserCardIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>