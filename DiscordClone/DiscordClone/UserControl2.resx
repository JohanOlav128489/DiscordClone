<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAbCAYAAAB4Kn/lAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAAVhJREFUSEvtkj1LA0EQhvNf/CBaCFpcY6+SEI2XoMYPEMFCCKiQxsbCxlqwUxFt
        cho8xOPwo1F/2cg7MMcxe7u3iEEQiwdmd959bnaTysholYZBRW/8FH9UXJ2YoqXlVQa17hdRKg7bHRo8
        PlP69smgxp7OaZzisfFJuovTTCrcxyn3dN5bXG+EhlRAT+e9xa2VDUMooKfzvyMOglla39zxFnf3e3xG
        ewzx8ckp3UYx181wzRAK6CGDGme0xxBjAoTna4s0PRMYQgE93Ay13NAphjA/xV730JBiDz1ksPZ6CnB2
        fpFNjfXcQoMOekcM6vwAyOrzVjEmwCG8NZ5G9+W5bNNaxSKXyfGB6CGhy+t+JsSeTeoUixw/DN4yeXmn
        5PWD66JbaJziPFc3EaP3bZSKt7Z3mf7giZG1zmmc4la7Y/zVBPR03lsMavVmITqnKRV/l39xxtDEXzGX
        BRCRq5WpAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAaCAYAAACtv5zzAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAASFJREFUSEvtlS0OAjEQhfcuIDjBGg5AguAABIUmwaARGDQJDodC4TA4TlbySF7S
        fX1tIVkUiBc2zHS++ensNoPhKHxTjf7Rt34E0LbjMF8sw2q9Cdvd/vU8mc4SP6ciAIHPl2u43R9WsNVA
        WQCyZSA8QwjGalAJIbDp+SKAwWsZxhUCqHYLQEAcOBxPibMTIPDNJZMAmJFzzgkQVqy2DoCOuXJL4kw0
        sQ4Aw4MTfjVATWxtEcAsUIkGqInV643qHaDt7QB4PT/ZVASGL9tbrIBOsfRArHgZKZ2fvUUqB3HBIW1v
        sgdYGj2kS8Qbo9L+W0CuinizXRKQm1sCgHLl0+7esK6NWYCDxAHUpoN9CwChZL6q1cYPkGtLrCKgD/0B
        VT0BukNFyzCvGwsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAdCAYAAABfeMd1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAASVJREFUSEvtlCEOAkEMRbkLCE6whgOQIDgAQaFJMGgEBk2Cw6FQOAyOky35mzRp
        /rRNZ5PFgHjJMsz8187O7Gg8mbZDM+KBIfhhSdPMOng8okpyOJ7a5+vdcb5ci/89QglXfbs/TAnmzBfL
        Yr3gSrAIYQjGs/wWML5ab7pxPIPtbl/kuBIOzCIFcZ4pQft6a7JgDWe5EuB1gyC8Dx4H2D7OCSVYoAMQ
        rA+B1W1agmNqVWrdDYzpOdIlMlwJLxJ4kcYqiItKSaKLx1uWkuCsc3UIymyXzOWiinfiBbAIz1yMdUdC
        CZ8uXSWH95Z4ex3B3YYS7yJmsLoxJUC2S38IOVB/ID1BKAHcun4X/KnnuZpQwmhJdEGZKolUHFVtUSXp
        y19SxVckHz2kRJTSrV5pAAAAAElFTkSuQmCC
</value>
  </data>
</root>